syntax = "proto3";

package pikvm;

option py_generic_services = true;

// Enum for power actions
enum PowerAction {
    ON = 0;
    OFF = 1;
    OFF_HARD = 2;
    RESET_HARD = 3;
}

// Enum for button types
enum ButtonType {
    POWER = 0;
    POWER_LONG = 1;
    RESET = 2;
}

// Request for power control
message PowerControlRequest {
    PowerAction action = 1;
    bool wait = 2;
}

// Request for button click
message ButtonClickRequest {
    ButtonType button = 1;
    bool wait = 2;
}

// Generic response
message CommandResponse {
    bool success = 1;
    string message = 2;
}

// MSD image upload request
message MSDUploadRequest {
    string image_path = 1;
    string image_name = 2;
}

// GPIO control request
message GPIOControlRequest {
    string channel = 1;
    int32 state = 2;
    bool wait = 3;
    double pulse_delay = 4;  // Optional for pulse
}

// Service definition
service PikvmControlService {
    // Power management
    rpc PowerControl(PowerControlRequest) returns (CommandResponse) {}
    rpc ButtonClick(ButtonClickRequest) returns (CommandResponse) {}
    
    // Mass Storage Drive
    rpc UploadMSDImage(MSDUploadRequest) returns (CommandResponse) {}
    
    // GPIO Control
    rpc SwitchGPIO(GPIOControlRequest) returns (CommandResponse) {}
    rpc PulseGPIO(GPIOControlRequest) returns (CommandResponse) {}
}
